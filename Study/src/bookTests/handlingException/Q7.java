package bookTests.handlingException;

public class Q7 {
    public void doA(int k) throws Exception {  // 0
        for(int i=0; i< 10; i++) {
            if(i == k) throw new Exception("Index of k is "+i); // 1
        }
    }
    public void doB(boolean f) { // 2
        if(f) {
        //    doA(15); // 3
        }
        else return;
    }
    public static void main(String[] args) { // 4
        Q7 a = new Q7();
        a.doB(args.length>0); // 5
    }
}
//This will compile if throws Exception is added at line //2 as well as //4
/*
Any checked exceptions must either be handled using a try block or the method that generates the exception must declare that it throws that exception.
In this case, doA() declares that it throws Exception. doB() is calling doA but it is not handling the exception generated by doA().
So, it must declare that it throws Exception. Now, the main() method is calling doB(), which generates an exception (due to a call to doA()).
Therefore, main() must also either wrap the call to doB() in a try block or declare it in its throws clause.

The main(String[] args) method is the last point in your program where any unhandled checked exception can bubble up to.
After that the exception is thrown to the JVM and the JVM kills the thread.
 */